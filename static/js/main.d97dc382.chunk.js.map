{"version":3,"sources":["Components/Navbar.module.css","Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Navbar","props","className","mode","href","title","type","id","classes","box1","box2","box3","onClick","toggleMode","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","defaultProps","about","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d97dc382.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"box1\":\"Navbar_box1__2PGKD\",\"box2\":\"Navbar_box2__1wPf4\",\"box3\":\"Navbar_box3__2TChN\"};","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport classes from './Navbar.module.css';\r\n// import {Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n      \r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href ='#'>{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                <a className=\"nav-link active\" aria-current=\"page\" href ='#'>Home</a>\r\n              </li>\r\n              {/* <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to ='/about'>{props.about}</Link>\r\n                \r\n              </li> */}\r\n                </ul>\r\n            {/* <form className=\"d-flex\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form> */}\r\n              <button className={classes.box1}></button>\r\n              <button className={classes.box2}></button>\r\n              <button className={classes.box3}></button>\r\n        \r\n\r\n            <div className={`form-check form-switch text-${props.mode==='light' ? 'dark':'light'}`}>\r\n              <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n            </div>\r\n            {/* <div className={`form-check form-switch mx-3 text-${props.mode==='light' ? 'dark':'light'}`}>\r\n              <input className=\"form-check-input\"  type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Greenish Mode</label>\r\n            </div> */}\r\n                 </div>\r\n        </div>\r\n      \r\n        \r\n      </nav>\r\n      \r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title : propTypes.string,\r\n    about : propTypes.string\r\n}\r\n\r\nNavbar.defaultProps ={\r\n    title:\"Set Title Here\",\r\n    about : 'About Text Here'\r\n}","import React ,{useState}from 'react';\r\n\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick =()=>{\r\n       \r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to uppercase!\",\"success\");\r\n    }\r\n    const handleLowClick =()=>{\r\n       \r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to lowercase!\",\"success\");\r\n    }\r\n    const handleClearClick =()=>{\r\n       \r\n        let newText ='';\r\n        setText(newText);\r\n        props.showAlert(\"TextArea Cleared!\",\"success\");\r\n    }\r\n    const handleOnChange =(event)=>{\r\n      \r\n        setText(event.target.value);\r\n    }\r\n    const handleCopy = ()=>{\r\n\r\n        var text = document.getElementById('myBox');\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\" Copied to clipboard!\",\"success\");\r\n    }\r\n\r\n    const handleExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"))\r\n        props.showAlert(\"Extra spaces are removed!\",\"success\" );\r\n    }\r\n\r\n\r\n    const[text,setText] = useState('');\r\n    \r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color :props.mode==='dark' ? 'white':'#042743'}}>\r\n<div className=\"mb-3\">\r\n    <h1 >{props.heading}</h1>\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style=\r\n  {{backgroundColor :props.mode==='dark' ? 'grey':'white',color :props.mode==='dark' ? 'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert To LowerCase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleCopy}>Copy Text</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={handleExtraSpace}>Remove Extra Space</button>\r\n        </div>\r\n        <div className=\"container my-3\" style={{color :props.mode==='dark' ? 'white':'#042743'}}>\r\n            <h2>Your text Summary</h2>\r\n            <p> {text.split(\" \").length-1} words and {text.length} characters </p>\r\n            <p> {text.split(\".\").length} Sentences </p>\r\n            <p> {0.008* text.split(\" \").length} Minutes read </p>\r\n            <h2>Preview</h2>\r\n            <p>{text.length>0?text:\"Enter something in the text box above to preview it here\"}</p>\r\n        </div>\r\n        </>\r\n    )   \r\n}\r\n","import React from 'react'\r\n\r\n function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower =  word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n           <strong>{capitalize(props.alert.type)}</strong> :{props.alert.msg}\r\n             \r\n               \r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Alert","\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\n// import About from './Components/About';\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\n// import{\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n//   Link\n// }from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light');\n  const [alert, setAlert] = useState(null); \n\n  const showAlert=(message, type)=>{\n    setAlert({\n      msg : message,\n      type : type\n    })\n    setTimeout(() => {\n      setAlert(null)\n    }, 2000);\n\n  }\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n    setMode('dark');\n    document.body.style.backgroundColor = '#042743';\n    showAlert(\"Dark Mode has been enabled\",\"success\");\n    document.title ='TextUtils-Dark Mode';\n  }\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light Mode has been enabled\",\"success\");\n      document.title ='TextUtils-Light Mode';\n    }\n  }\n  return (\n    <>\n    {/* <Router> */}\n<Navbar title =\"Text Utils\" about=\"About\" mode ={mode} toggleMode={toggleMode}/>\n<Alert alert={alert}/>\n<div className=\"container my-3\">\n{/* <Switch> */}\n          {/* <Route exactnum path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n         \n          \n          {/* <Route exactnum path=\"/\"> */}\n          <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below \"mode ={mode}/>\n           \n          {/* </Route> */}\n{/* </Switch> */}\n</div>\n{/* </Router>  */}\n\n\n\n   </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}